/*! superfly-css-utilities-colors | MIT License | https://github.com/superfly-css/superfly-css-utilities-colors/blob/master/LICENSE.md */


/* =======================================
   COLORS
   0: Import shared color variables
   1: Gray color utilities
   2: Notification background color utilities
   3: Text, background, and border colors
   4: Simple numeric Hex Color Combinations
   --------------------------------------
   -- Naming Conventions --
   --------------------------------------
   All background color classes start with
   `u-background-color-`.
   --------------------------------------
   All text color classes start with
   `u-text-color-`.
   --------------------------------------
   ======================================= */


/* 0 */

@import "superfly-css-variables-colors";

/* 1 */

:root {
  @each $weight in 100, 300, 400, 500, 600, 700, 900 {
      --u-background-color-gray-$(weight) {
          background-color: var(--color-gray-$(weight)) !important;
      }
  }
}

@each $weight in 100, 300, 400, 500, 600, 700, 900 {
    .u-background-color-gray-$(weight) {
        @apply(--u-background-color-gray-$(weight));
    }
}

:root {
  @each $weight in 100, 300, 400, 500, 600, 700, 900 {
      --u-text-color-gray-$(weight) {
          color: var(--color-gray-$(weight)) !important;
      }
  }
}

@each $weight in 100, 300, 400, 500, 600, 700, 900 {
    .u-text-color-gray-$(weight) {
        @apply(--u-text-color-gray-$(weight));
    }
}

:root {
  @each $weight in 100, 300, 400, 500, 600, 700, 900 {
      --u-border-color-gray-$(weight) {
          color: var(--color-gray-$(weight)) !important;
      }
  }
}

@each $weight in 100, 300, 400, 500, 600, 700, 900 {
    .u-border-color-gray-$(weight) {
        @apply(--u-border-color-gray-$(weight));
    }
}


/* 2 */
:root {
  @each $weight in 100, 300, 500, 700, 900 {
      @each $brand in primary, success, info, warning, danger {
          --u-background-color-$(brand)-$(weight) {
              background-color: var(--color-$(brand)-$(weight)) !important;
          }
      }
  }
}

@each $weight in 100, 300, 500, 700, 900 {
    @each $brand in primary, success, info, warning, danger {
        .u-background-color-$(brand)-$(weight) {
            @apply(--u-background-color-$(brand)-$(weight));
        }
    }
}


/* 3 */

@each $color in black, white, tomato, neon-mustard, purple-pink, tomato-red, light-orange-red, orange-red, silver-grey, soft-white, medium-aquamarine {
    :root {
      --u-text-color-$(color) {
          color: var(--color-$(color)) !important;
      }
    }

    .u-text-color-$(color) {
        @apply(--u-text-color-$(color));
    }

    :root {
      --u-background-color-$(color) {
          background-color: var(--color-$(color)) !important;
      }
    }

    .u-background-color-$(color) {
        @apply(--u-background-color-$(color));
    }

    :root {
      --u-border-color-$(color) {
          border-color: var(--color-$(color)) !important;
      }
    }

    .u-border-color-$(color) {
        @apply(--u-border-color-$(color));
    }
}

/* 4 */

:root {
  @for $c from 1 to 9 {
      --u-background-color-$c$(c)$(c) {
          background-color: #$c$(c)$(c) !important;
      }
  }
}

@for $c from 1 to 9 {
    .u-background-color-$c$(c)$(c) {
        @apply(--u-background-color-$c$(c)$(c));
    }
}

:root {
  @for $c from 1 to 9 {
      --u-border-color-$c$(c)$(c) {
          border-color: #$c$(c)$(c) !important;
      }
  }
}

@for $c from 1 to 9 {
    .u-border-color-$c$(c)$(c) {
        @apply(--u-border-color-$c$(c)$(c));
    }
}

:root {
  @for $c from 1 to 9 {
      --u-text-color-$c$(c)$(c) {
          color: #$c$(c)$(c) !important;
      }
  }
}

@for $c from 1 to 9 {
    .u-text-color-$c$(c)$(c) {
        @apply(--u-text-color-$c$(c)$(c));
    }
}
